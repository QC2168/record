import{_ as e,c as o,o as t,O as c}from"./chunks/framework.488fce0c.js";const m=JSON.parse('{"title":"var,let和const的区别","description":"","frontmatter":{"title":"var,let和const的区别","tags":["JavaScript"]},"headers":[],"relativePath":"interview/JavaScript/var,let和const的区别.md"}'),a={name:"interview/JavaScript/var,let和const的区别.md"},d=c('<h2 id="var-let和const的区别" tabindex="-1">var，let和const的区别 <a class="header-anchor" href="#var-let和const的区别" aria-label="Permalink to &quot;var，let和const的区别&quot;">​</a></h2><ul><li><code>let</code>和<code>const</code>是<code>ES6</code>之后新增的关键词，用于在一个块级作用域声明变量，解决了<code>var</code>的全局变量污染问题</li><li><code>var</code>存在变量提升，而且会给全局对象上添加属性，<code>let</code>和<code>const</code>不会</li><li><code>var</code>可以重复声明变量，<code>let</code>和<code>const</code>不允许</li><li><code>var</code>和<code>let</code>可以重新进行赋值操作（指针改变），<code>const</code>不能</li><li><code>var</code>和<code>let</code>可以只声明，<code>const</code>必须提供初始值</li></ul>',2),r=[d];function l(s,n,i,_,v,p){return t(),o("div",null,r)}const u=e(a,[["render",l]]);export{m as __pageData,u as default};
