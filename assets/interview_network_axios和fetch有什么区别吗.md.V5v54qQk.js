import{_ as e,o,c,R as t}from"./chunks/framework.sdpcv3_n.js";const f=JSON.parse('{"title":"axios和fetch有什么区别吗","description":"","frontmatter":{"title":"axios和fetch有什么区别吗","tags":["network"]},"headers":[],"relativePath":"interview/network/axios和fetch有什么区别吗.md","filePath":"interview/network/axios和fetch有什么区别吗.md"}'),d={name:"interview/network/axios和fetch有什么区别吗.md"},i=t('<h2 id="axios和fetch有什么区别吗" tabindex="-1"><code>axios</code>和<code>fetch</code>有什么区别吗 <a class="header-anchor" href="#axios和fetch有什么区别吗" aria-label="Permalink to &quot;`axios`和`fetch`有什么区别吗&quot;">​</a></h2><ul><li><p><code>Axios</code>和<code>Fetch</code>都是用来发起网络请求的<code>JavaScript</code>库，它们的主要区别在于以下几点：</p></li><li><p><code>Axios</code>支持请求取消，而<code>Fetch</code>不支持。如果你需要支持取消请求功能，那么使用<code>Axios</code>更加方便。</p></li><li><p><code>Axios</code>可以直接从服务器接收和发送<code>JSON</code>格式的数据，而<code>Fetch</code>需要手动将数据转换为<code>JSON</code>格式。</p></li><li><p>在处理错误时，<code>Axios</code>可以自动将<code>HTTP</code>状态码转换为错误对象，并提供更多的错误处理选项。<code>Fetch</code>对错误处理的支持较弱。</p></li><li><p><code>Axios</code>支持浏览器和<code>Node.js</code>环境，而<code>Fetch</code>仅支持浏览器环境。</p></li></ul><p>总体来说，<code>Axios</code>提供了更多的功能和更好的错误处理能力，因此在大多数情况下建议使用<code>Axios</code>。不过，如果你只需要简单的网络请求功能，可以考虑使用<code>Fetch</code>。</p>',3),a=[i];function s(_,r,n,h,l,p){return o(),c("div",null,a)}const A=e(d,[["render",s]]);export{f as __pageData,A as default};
