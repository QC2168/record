import{_ as e,o as a,c as t,R as i}from"./chunks/framework.sdpcv3_n.js";const u=JSON.parse('{"title":"开源的Mobile备份工具","description":"","frontmatter":{"title":"开源的Mobile备份工具","tags":["javascript"]},"headers":[],"relativePath":"article/开源的Mobile备份工具.md","filePath":"article/开源的Mobile备份工具.md"}'),o={name:"article/开源的Mobile备份工具.md"},r=i('<h2 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h2><p><code>MIB</code>是一款基于<code>Node.js</code>和<code>ADB</code>的开发的备份工具，根据你的配置自动将移动设备上的数据文件迁移备份至电脑上，支持增量备份</p><h2 id="故事起因" tabindex="-1">故事起因 <a class="header-anchor" href="#故事起因" aria-label="Permalink to &quot;故事起因&quot;">​</a></h2><p>不知道大家有没有一种习惯，比如说今天去外边游玩看到了一些有趣的事件，景色会拿起手机将这一瞬间拍下来，等游玩结束后会将这些图片、视频移动到云端或者存储设备上</p><p>我是有这个习惯，但是每次都要自己手动来拉取这些拍摄数据有点繁琐，而且有些时候还会遇到个问题，这个图片我本地磁盘有了吗，我这次还要不要拉取它？</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/3xdqY.gif" alt="3xdqY"></p><h2 id="琢磨开发" tabindex="-1">琢磨开发 <a class="header-anchor" href="#琢磨开发" aria-label="Permalink to &quot;琢磨开发&quot;">​</a></h2><p>前面也找了一些备份数据，但找了一圈没有发现适合我的</p><p>于是，我自己开始琢磨我能不能写一个小工具实现我的这个需求</p><p>通过了一些资料查询，我可以通过<code>ADB</code>的方式与手机设备进行互动，其中就包括了实现文件之间的传输功能<code>pull / push</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [安卓设备文件地址] [本地地址]</span></span></code></pre></div><blockquote><p><code>ADB</code>是<code>Android</code>调试桥，它允许开发人员通过<code>USB/Wi-Fi</code>连接与<code>Android</code>设备通信。可用于安装和调试应用程序，访问设备的文件系统，运行<code>shell</code>命令等等</p></blockquote><h2 id="编写第一版" tabindex="-1">编写第一版 <a class="header-anchor" href="#编写第一版" aria-label="Permalink to &quot;编写第一版&quot;">​</a></h2><p>在知道了这个指令之后，我使用<code>node.js</code>开始编写第一版<a href="https://github.com/QC2168/mib" target="_blank" rel="noreferrer">MIB</a>，那个时候还不是图形化界面的，而是像<code>vue-cli</code>一样通过命令行方式信息交互进行的</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/mib-cli_backuping.gif" alt="mib-cli_backuping"></p><h2 id="可视化的开始" tabindex="-1">可视化的开始 <a class="header-anchor" href="#可视化的开始" aria-label="Permalink to &quot;可视化的开始&quot;">​</a></h2><p>经过一段时间的使用<code>MIB</code>后，我逐渐开始思考如何将其扩展到图形化方面，让其使用起来更加方便~</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/b201j.gif" alt="b201j"></p><p>我将技术栈选中了<code>React+Electron</code>，那个时候对<code>react+ts</code>并还不是很熟悉，在开发的过程也遇到挺多的小问题，但也是这些小问题让我在前端开发的路上认识到更多的知识点~</p><p>经过了一段时间的开发，现在图形化版本基本是开发完成了，主界面如下</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/20230627174134.png" alt="20230627174134"></p><h2 id="在图形化中的优化" tabindex="-1">在图形化中的优化 <a class="header-anchor" href="#在图形化中的优化" aria-label="Permalink to &quot;在图形化中的优化&quot;">​</a></h2><h3 id="配置文件更改" tabindex="-1">配置文件更改 <a class="header-anchor" href="#配置文件更改" aria-label="Permalink to &quot;配置文件更改&quot;">​</a></h3><p>通过从命令行方式转变为图形化界面，已将之前繁琐的手动修改配置文件的操作变得更加直观</p><p>现在可以通过可视化的界面来完成这些配置参数的设置，并且在这个过程中还增加了约束机制，以防止无效参数的填写，降低出错的风险</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/20230614195157.png" alt="20230614195157"></p><h3 id="任务执行状态" tabindex="-1">任务执行状态 <a class="header-anchor" href="#任务执行状态" aria-label="Permalink to &quot;任务执行状态&quot;">​</a></h3><p>当在命令行中运行程序时，有时可能会出现程序看起来停滞不前的情况，可能导致用户感到困惑和不安</p><p>为了提高用户体验，在图像化界面中，使用<code>loading</code>效果的动画来告知用户，当前任务正在进行处理</p><p>这样一来，用户就能够清楚地知道程序正在工作，而不是被卡住了</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/mib_backuping.gif" alt="mib_backuping"></p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/Animation.gif" alt="Animation"></p><h3 id="文件类型分析" tabindex="-1">文件类型分析 <a class="header-anchor" href="#文件类型分析" aria-label="Permalink to &quot;文件类型分析&quot;">​</a></h3><p>另外，我还将写了个小功能，可以帮助识别备份目录中各种文件类型的占比情况，并且绘制成直观的饼状图</p><p>能更容易了解备份目录中不同类型文件的占比，有助于更好地管理备份数据</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/20230627180035.png" alt="20230627180035"></p><h2 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h2><p>GITHUB：<a href="https://github.com/QC2168/mib" target="_blank" rel="noreferrer">mib</a></p><p>码云：<a href="https://gitee.com/QC2168/mib" target="_blank" rel="noreferrer">mib</a></p>',39),c=[r];function n(s,l,p,h,d,m){return a(),t("div",null,c)}const g=e(o,[["render",n]]);export{u as __pageData,g as default};
