import{_ as l,c as a,o as e,O as c}from"./chunks/framework.488fce0c.js";const h=JSON.parse('{"title":"call和apply的区别","description":"","frontmatter":{"title":"call和apply的区别","tags":["JavaScript"]},"headers":[],"relativePath":"interview/JavaScript/call和apply的区别.md"}'),t={name:"interview/JavaScript/call和apply的区别.md"},o=c('<h2 id="call和apply的区别" tabindex="-1">call和apply的区别 <a class="header-anchor" href="#call和apply的区别" aria-label="Permalink to &quot;call和apply的区别&quot;">​</a></h2><ul><li>两者的作用是一样的，区别在传入参数形式不同</li><li><code>apply</code>只接收两个参数，分别是<code>this</code>指向对象和参数集合（数组，伪数组） <ul><li><code>apply(thisArg)</code></li><li><code>apply(thisArg, argsArray)</code></li></ul></li><li><code>call</code>接收的参数是不固定的，第一个参数和<code>apply</code>一样是<code>this</code>指向对象，从第二个参数开始都是传入到原函数的参数，根据传入的顺序，依次传入 <ul><li><code>function.call(thisArg, arg1, arg2, ...)</code></li></ul></li></ul><blockquote><p>apply和call如果第一个参数是null或者undefined，会指向window（非严格模式下触发） apply和call手写题可移步 jsCode</p></blockquote>',3),p=[o];function i(r,d,s,_,n,u){return e(),a("div",null,p)}const f=l(t,[["render",i]]);export{h as __pageData,f as default};
