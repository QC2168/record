import{_ as e,o as a,c as t,R as s}from"./chunks/framework.sdpcv3_n.js";const g=JSON.parse('{"title":"分享一个开箱即用的utools插件开发模板","description":"","frontmatter":{"title":"分享一个开箱即用的utools插件开发模板","tags":["other"]},"headers":[],"relativePath":"article/分享一个开箱即用的utools插件开发模板.md","filePath":"article/分享一个开箱即用的utools插件开发模板.md"}'),i={name:"article/分享一个开箱即用的utools插件开发模板.md"},o=s(`<h2 id="utools-plugin-template" tabindex="-1">utools-plugin-template <a class="header-anchor" href="#utools-plugin-template" aria-label="Permalink to &quot;utools-plugin-template&quot;">​</a></h2><p>今天给大家带来一个开源的<code>utools</code>插件开发模板，让你更快的开发一个属于自己的<code>utools</code>插件</p><h3 id="为什么用模板" tabindex="-1">为什么用模板 <a class="header-anchor" href="#为什么用模板" aria-label="Permalink to &quot;为什么用模板&quot;">​</a></h3><p>因为模板可以帮助我们更快的开发，并且减少一些重复的配置工作，大大提高开发效率</p><p>这个模板也是我在开发<code>utools</code>插件时，萌生出的一个想法，因为当时我想开发一个插件的时候并没有一个基础模板，我得从官方开发者模板中一步一步的新建文件，并配置一些字段信息，这个过程显得有点繁琐，而且可能会出错的概率</p><h3 id="模板界面" tabindex="-1">模板界面 <a class="header-anchor" href="#模板界面" aria-label="Permalink to &quot;模板界面&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/20231125151027.png" alt="20231125151027"></p><h3 id="模板功能" tabindex="-1">模板功能 <a class="header-anchor" href="#模板功能" aria-label="Permalink to &quot;模板功能&quot;">​</a></h3><ul><li>🌈 开箱即用的<code>Vite+Vue3</code>的<code>Utools</code>插件开发模板</li><li>⚡ 开发环境自动注入<code>HMR</code>字段</li><li>🦍 自动构建<code>upx</code>包</li><li>🧸 构建<code>utools/preload</code>文件，处理第三方依赖</li><li>🚀 构建桌面应用</li></ul><h3 id="模板使用" tabindex="-1">模板使用 <a class="header-anchor" href="#模板使用" aria-label="Permalink to &quot;模板使用&quot;">​</a></h3><p>这个模板的使用也是很简单的，你只需要将这个模板克隆下来，并安装依赖，然后就可以开始开发自己的插件了</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/QC2168/utools-plugin-template</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utools-plugin-template</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>接下来，你只需要配置一些关于你的插件信息就可以了</p><p>由于涉及到比较多图片简介，这里就不一一贴出来了（详细见<a href="https://github.com/QC2168/utools-plugin-template/blob/main/README.md" target="_blank" rel="noreferrer"><code>readme.md</code></a>）</p><h3 id="集成electron" tabindex="-1">集成Electron <a class="header-anchor" href="#集成electron" aria-label="Permalink to &quot;集成Electron&quot;">​</a></h3><p>在开发这个模板的过程中，也收集了一些用户反馈，有些开发者希望开发插件时，同时也能构建一个<code>exe</code>文件</p><p>所以这个模板集成了<code>Electron</code>的开发环境，可以让你更快的开发插件，并且可以直接打包成<code>exe</code>文件，让你的插件更加的方便使用</p><p>在开发/构建的时候，你只需要执行一条命令即可😜</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 本地开发</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:electron</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建应用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:electron</span></span></code></pre></div><blockquote><p><code>electron</code>集成部分使用了<code>caoxiemeihao</code>大佬的<code>vite-plugin-electron</code>插件来实现 🌹</p></blockquote><p>这个是当项目运行<code>electron</code>时的开发界面</p><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/20231125150942.png" alt="20231125150942"></p><h3 id="模板功能实现" tabindex="-1">模板功能实现 <a class="header-anchor" href="#模板功能实现" aria-label="Permalink to &quot;模板功能实现&quot;">​</a></h3><p>模板中的一些功能实现，实际上是依靠模板中的<code>@qc2168/vite-plugin-utools</code>插件实现的，也即是如果你想要模板中的功能也可以通过安装插件的方式在你的项目中实现（不包含<code>electron</code>部分）</p><p>这个也是因为在我开发<code>utools</code>插件时，踩的一个坑后开发出来的，最起初的目的是解决第三方依赖丢失问题</p><p>到后面在写模板时，又新增了插件热更新，插件打包等功能</p><p>插件仓库地址：<a href="https://github.com/QC2168/vite-plugin-utools" target="_blank" rel="noreferrer">vite-plugin-utools</a></p><h3 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>希望这个模板能够帮助到你，如果有什么问题，欢迎提<code>issue</code>，我会尽力的解答你的问题</p><p>如果这个模板对你有帮助，请给这个项目点一个⭐️，谢谢！</p><p>模板仓库地址：<a href="https://github.com/QC2168/utools-plugin-template" target="_blank" rel="noreferrer">utools-plugin-template</a> 插件仓库地址：<a href="https://github.com/QC2168/vite-plugin-utools" target="_blank" rel="noreferrer">vite-plugin-utools</a></p>`,31),l=[o];function n(p,r,c,h,d,u){return a(),t("div",null,l)}const m=e(i,[["render",n]]);export{g as __pageData,m as default};
