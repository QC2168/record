import{_ as a,o as s,c as i,R as e}from"./chunks/framework.sdpcv3_n.js";const k=JSON.parse('{"title":"isNaN和Number.isNaN的区别","description":"","frontmatter":{"title":"isNaN和Number.isNaN的区别","tags":["JavaScript"]},"headers":[],"relativePath":"interview/JavaScript/isNaN和Number.isNaN的区别.md","filePath":"interview/JavaScript/isNaN和Number.isNaN的区别.md"}'),n={name:"interview/JavaScript/isNaN和Number.isNaN的区别.md"},t=e(`<h2 id="isnan和number-isnan的区别" tabindex="-1">isNaN和Number.isNaN的区别 <a class="header-anchor" href="#isnan和number-isnan的区别" aria-label="Permalink to &quot;isNaN和Number.isNaN的区别&quot;">​</a></h2><ul><li><code>isNaN</code>会将传入的值转换为数值，如果不能被转换就返回<code>true</code>，反之返回false</li><li><code>Number.isNaN</code>会先判断是否为数字类型，如果是继续判断，否则直接返回<code>false</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>isNaN(&#39;1&#39;)； // false</span></span>
<span class="line"><span>Number.isNaN(&#39;1&#39;)； // false</span></span>
<span class="line"><span>isNaN(NaN)； // true</span></span>
<span class="line"><span>Number.isNaN(NaN)； // true</span></span></code></pre></div><h3 id="关于nan" tabindex="-1">关于NaN <a class="header-anchor" href="#关于nan" aria-label="Permalink to &quot;关于NaN&quot;">​</a></h3><p>NaN是一个警戒值，代表在进行数字类型中运算失败时返回的结果</p><p>它也不等于自身</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NaN</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NaN</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // true</span></span></code></pre></div>`,7),N=[t];function p(l,r,c,h,o,d){return s(),i("div",null,N)}const _=a(n,[["render",p]]);export{k as __pageData,_ as default};
