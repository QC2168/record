(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{610:function(t,a,s){"use strict";s.r(a);var n=s(16),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"javascript-内存回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-内存回收机制"}},[t._v("#")]),t._v(" JavaScript 内存回收机制")]),t._v(" "),s("h3",{attrs:{id:"什么是内存回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存回收机制"}},[t._v("#")]),t._v(" 什么是内存回收机制")]),t._v(" "),s("p",[t._v("垃圾回收又称为"),s("code",[t._v("GC")]),t._v("（"),s("code",[t._v("Garbage Collection")]),t._v("）是指一种自动内存管理机制，在"),s("code",[t._v("JavaScript")]),t._v("中当我们声明一个变量时会在内存中开辟一块内存空间用于存放这个变量，当这个变量被使用过后，你可能再也不需要他了，此时你可以将他标记为"),s("code",[t._v("NULL")]),t._v("（此时它就被称为垃圾可以被处理掉），它将会被"),s("code",[t._v("JavaScript")]),t._v("引擎自动回收。从而释放内存空间。")]),t._v(" "),s("p",[s("code",[t._v("JavaScript")]),t._v("通常情况下是不需要手动来管理的，它们都会自动帮助我们管理内存，同样有自动管理内存的语言还有"),s("code",[t._v("java")]),t._v("、"),s("code",[t._v("python")]),t._v("、"),s("code",[t._v("swift")]),t._v("、"),s("code",[t._v("dart")]),t._v("等")]),t._v(" "),s("p",[t._v("手动管理的编程语言（"),s("code",[t._v("C")]),t._v("、"),s("code",[t._v("C++")]),t._v("，早期"),s("code",[t._v("OC")]),t._v("等），这些语言需要开发者手动的进行内存管理。")]),t._v(" "),s("h3",{attrs:{id:"垃圾回收策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收策略"}},[t._v("#")]),t._v(" 垃圾回收策略")]),t._v(" "),s("p",[t._v("垃圾回收策略主要有标记清理、引用计数")]),t._v(" "),s("h4",{attrs:{id:"标记清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标记清理"}},[t._v("#")]),t._v(" 标记清理")]),t._v(" "),s("p",[t._v("标记清理法 "),s("code",[t._v("mark-and-sweep")]),t._v("，是"),s("code",[t._v("JavaScript")]),t._v("最常用的垃圾回收策略。目前市面上大多数浏览器的JS引擎都是使用标记清理法")]),t._v(" "),s("blockquote",[s("p",[t._v("不同的浏览器还对此算法进行额外的加工优化算法。在回收的频率上也会有所差异")])]),t._v(" "),s("p",[t._v("给变量标记的方法有很多种，例如在变量进入上下文时，我们将变量推入到一个列表中在，这里存放着在上下文的变量。而另外一个表存放不在上下文中的变量")]),t._v(" "),s("p",[t._v("当我们使用"),s("code",[t._v("JavaScript")]),t._v("当一个作用域中定义一个变量时，这个变量将会被JS引擎在当前上文中进行标记，在正常情况下这个时候变量是不可能被回收的，因为可能在某些时候我们还需要用到它。当变量离开作用域时，也会被添加上离开上下文的标记。")]),t._v(" "),s("p",[t._v("在标记法的整个执行过程大概过程是")]),t._v(" "),s("ul",[s("li",[t._v("垃圾收集器会给内存中的所有变量做一个标记")]),t._v(" "),s("li",[t._v("当变量离开上下文时，会在做一次标记，代表这个变量可销毁")]),t._v(" "),s("li",[t._v("清理所有可销毁的变量，释放内存空间，之后就是等待下一轮回收")])]),t._v(" "),s("h4",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("p",[t._v("标记清理法也有个缺点，当每一轮清理完变量之后，会出现大量不连续的内存碎片，当空间碎片太多时可能会导致程序在运行过程中需要较大内存空间对象时，无法找到足够的连续内存而不得不再提前触发一次垃圾回收动作。")]),t._v(" "),s("h4",{attrs:{id:"引用计数-reference-counting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用计数-reference-counting"}},[t._v("#")]),t._v(" 引用计数 "),s("code",[t._v("reference counting")])]),t._v(" "),s("p",[t._v("引用计数也是一种垃圾回收策略，但是没有那么常用。")]),t._v(" "),s("p",[t._v("它主要是做法是将每一个变量值都记录它的引用次数，这样子说您可能不太明白，我们举个例子。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个bar的对象，此时bar.count引用了foo变量，foo计数+1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反之，我们把bar.count的值覆盖掉的话，foo的计数-1")]),t._v("\n\nbar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n\n")])])]),s("p",[t._v("引用计数最初是被"),s("code",[t._v("Netscape3.0")]),t._v("浏览器所采用，但很快就遇到了严重的问题：循环引用。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    other "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    other "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面这个例子中，"),s("code",[t._v("obj1")]),t._v("和"),s("code",[t._v("obj2")]),t._v("都是互相引用的状态，它们是计数都是2，在引用计数策略情况下，在上下文执行之后，这两个对象并不会被销毁（计数永远不会变成0）。所以在"),s("code",[t._v("Netscape4.0")]),t._v("时，就采用了标记清理策略。")]),t._v(" "),s("h4",{attrs:{id:"扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("IE8")]),t._v("之前，"),s("code",[t._v("BOM")]),t._v("和"),s("code",[t._v("DOM")]),t._v("中的对象是"),s("code",[t._v("C++")]),t._v("实现的组件对象模型（"),s("code",[t._v("COM")]),t._v("即"),s("code",[t._v("Component Object Model")]),t._v("）对象，而"),s("code",[t._v("COM")]),t._v("对象使用引用计数实现垃圾回收。即使IE的JS引擎使用了标记清理策略，但存取的"),s("code",[t._v("COM")]),t._v("对象仍然是引用计数策略。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some_element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("这里引用了JavaScript高级程序设计（第四版）P96的例子")])]),t._v(" "),s("p",[t._v("从上面这个例子可以看出，myObject.element和element.someObject造成了循环引用。所以DOM将永远不会被回收，即使在页面上已经消失了。")]),t._v(" "),s("p",[t._v("或者，你可以先上面的例子一样，清除循环引用")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("myObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("为了修复这个问题，在"),s("code",[t._v("IE9")]),t._v("之后"),s("code",[t._v("BOM")]),t._v("和"),s("code",[t._v("DOM")]),t._v("对象都被改成了"),s("code",[t._v("JavaScript")]),t._v("对象，避免了使用两种不同的垃圾回收算法导致出现问题。")]),t._v(" "),s("h3",{attrs:{id:"内存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),s("p",[t._v("在使用"),s("code",[t._v("JavaScript")]),t._v("这种自动垃圾回收处理的编程语言环境中，可以大大降低开发者的心智负担，无需去关心内存管理。")]),t._v(" "),s("p",[t._v("通常情况下，分配给浏览器的内存要比我们使用的桌面软件要少得很多，这是因为出于安全考虑而不是别的，这个内存限制也会影响到变量分配，语句执行，调用栈的，也避免大量的"),s("code",[t._v("JavaScript")]),t._v("代码使得甚至耗尽系统中的内存导致操作系统崩溃。")]),t._v(" "),s("p",[t._v("内存的占用量保持在一个较小值可以使页面的性能更好，这也是优化内存占用的最佳手段，即只保存必要的数据，其他数据将被"),s("code",[t._v("GC")]),t._v("回收。")]),t._v(" "),s("h4",{attrs:{id:"let-const-提升性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let-const-提升性能"}},[t._v("#")]),t._v(" let const 提升性能")]),t._v(" "),s("p",[t._v("在ES6中，新增了let和const关键字用来声明变量常量，这两个关键字在改善代码风格时，也改进了垃圾回收的过程。因为let和const都是以块级作为作用域的，所以比起var的话，如果块级作用域比函数作用域更早终止的情况下，那么let和const会被更早地被垃圾回收，释放内存。")]),t._v(" "),s("h4",{attrs:{id:"v8-隐藏类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v8-隐藏类"}},[t._v("#")]),t._v(" V8 隐藏类")]),t._v(" "),s("p",[t._v("不同的浏览器使用的"),s("code",[t._v("JavaScript")]),t._v("引擎会采用不同的性能优化策略，在日常开发中大家最常用的"),s("code",[t._v("chrome")]),t._v("浏览器是使用的V8引擎的，在V8引擎将我们的"),s("code",[t._v("JavaScript")]),t._v("代码编程时机器码时会利用一种 “隐藏类”的操作，会让你的代码性能更好。")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _island "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_island'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" zhangsan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("我们看上面这个例子，在运行期间V8会将这两个实例共享相同的隐藏类，因为它们使用的是同一个"),s("code",[t._v("constructor")]),t._v("和原型。")]),t._v(" "),s("p",[t._v("下面，我们再拿上面的代码稍微改动下，看看什么情况下是不同的隐藏类。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _island "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_island'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" zhangsan "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhangsan'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加一个新的属性age")]),t._v("\n_island"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n\n")])])]),s("p",[t._v("在这例子，我们给"),s("code",[t._v("_island")]),t._v("添加一个新的属性"),s("code",[t._v("age")]),t._v("，此时这两个"),s("code",[t._v("Perso")]),t._v("n实例使用的就不是同一个隐藏类了，这将对性能有所影响。")]),t._v(" "),s("p",[t._v("如果再补充一句"),s("code",[t._v("delete _island.age")]),t._v("，在这句代码之后，它们还是共享同一个隐藏类")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" _island"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age\n")])])]),s("h4",{attrs:{id:"内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露"}},[t._v("#")]),t._v(" 内存泄露")]),t._v(" "),s("p",[t._v("内存泄漏（"),s("code",[t._v("Memory Leak")]),t._v("）是指程序中已动态分配的堆内存由于某种原因程序未释放或无法释放，造成系统内存的浪费，导致程序运行速度减慢甚至系统崩溃等严重后果。")]),t._v(" "),s("h5",{attrs:{id:"全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面的例子在声明了全局变量但却没有去使用它。由于"),s("code",[t._v("bar")]),t._v("没有使用"),s("code",[t._v("var")]),t._v("或者是"),s("code",[t._v("let")]),t._v("、"),s("code",[t._v("const")]),t._v("关键字去定义，此时"),s("code",[t._v("JavaScript")]),t._v("引擎会把"),s("code",[t._v("bar")]),t._v("添加到"),s("code",[t._v("window")]),t._v("上面的，当函数执行结束之后"),s("code",[t._v("bar")]),t._v("并不会被销毁，这就造成了内存泄漏。也是常见也最容易修复的内存泄漏问题。")]),t._v(" "),s("p",[t._v("解决的方法也很简单，只需要上"),s("code",[t._v("bar")]),t._v("前面添加上"),s("code",[t._v("var")]),t._v(" / "),s("code",[t._v("let")]),t._v(" / "),s("code",[t._v("const")]),t._v("关键字即可。")]),t._v(" "),s("h5",{attrs:{id:"定时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[t._v("#")]),t._v(" 定时器")]),t._v(" "),s("p",[t._v("定时器也可能会导致内存泄漏的出现，例如下面的例子，定时器中引用了一个外部的变量，只要定时器一直运行，那么这个变量将不会被垃圾回收。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_island'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h5",{attrs:{id:"事件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件监听"}},[t._v("#")]),t._v(" 事件监听")]),t._v(" "),s("p",[s("code",[t._v("EventTarget.addEventListener")]),t._v("也会造成内存泄漏的问题。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" divDom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ndivDom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("上面的例子中，我们通过"),s("code",[t._v("addEventListener")]),t._v("给"),s("code",[t._v("divDom")]),t._v("添加了一个事件，直接在"),s("code",[t._v("addEventListener")]),t._v("第二个参数直接传入一个匿名函数，这样子的话，好处是占用的存储空间更小了。但是由于没有保持函数的引用会导致无需无法调用"),s("code",[t._v("removeEventListener")]),t._v("，"),s("code",[t._v("addEventListener")]),t._v("也会一直保留在内存中无法回收而导致内存泄漏问题。")]),t._v(" "),s("p",[t._v("我们改善下上面的例子，把上面的匿名函数抽离出来成"),s("code",[t._v("increase")]),t._v("函数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" divDom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些要做的事情")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndivDom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("increase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁事件")]),t._v("\ndivDom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("increase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("如果你没有移除事件，而是直接"),s("code",[t._v("parent.removeChild")]),t._v("，此时在"),s("code",[t._v("DomTree")]),t._v("上是没有这个元素的，但"),s("code",[t._v("clickHandler")]),t._v("也驻留在内存中。")])]),t._v(" "),s("h5",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("闭包是指有权访问另外一个函数作用域中的变量的函数，它的应用场景有很多例如我们常用的工具函数防抖、节流、"),s("code",[t._v("react hook")]),t._v("等等。")]),t._v(" "),s("p",[t._v("闭包很容易在不知不觉的造成内存泄漏，从下面的例子中，"),s("code",[t._v("name")]),t._v("的内存会被泄露，因为"),s("code",[t._v("foo")]),t._v("函数返回的是一个函数，闭包一直在引用它，导致无法被垃圾回收。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_island"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"finalizationregistry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#finalizationregistry"}},[t._v("#")]),t._v(" FinalizationRegistry")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("FinalizationRegistry")]),t._v(" 是 ES2021引入的新对象")])]),t._v(" "),s("p",[s("code",[t._v("FinalizationRegistry")]),t._v("对象可以让你在对象被垃圾回收时请求一个回调")]),t._v(" "),s("p",[t._v("我们直接看下面这个例子，我们创建了一个"),s("code",[t._v("registry")]),t._v("对象，"),s("code",[t._v("FinalizationRegistry")]),t._v("接收一个函数，当执行垃圾回收时会触发执行这个函数。")]),t._v(" "),s("p",[t._v("接下来，我们把"),s("code",[t._v("foo")]),t._v("对象通过"),s("code",[t._v("registry.register")]),t._v("注册了"),s("code",[t._v("foo")]),t._v("，并传入了'"),s("code",[t._v("foo")]),t._v("被销毁了'，这是刚刚定义的函数形参"),s("code",[t._v("heldValue")]),t._v("。")]),t._v(" "),s("p",[t._v("最后，我们把"),s("code",[t._v("foo")]),t._v("指"),s("code",[t._v("向null")]),t._v("，在下一次GC后foo将会被销毁。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" registry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinalizationRegistry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("heldValue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("heldValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo被销毁了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nregistry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo被销毁了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfoo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);