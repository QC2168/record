import{_ as s,o as i,c as a,R as t}from"./chunks/framework.qjNjGLUL.js";const g=JSON.parse('{"title":"如何判断用户设备","description":"","frontmatter":{"title":"如何判断用户设备","tags":["JavaScript"]},"headers":[],"relativePath":"interview/JavaScript/如何判断用户设备.md","filePath":"interview/JavaScript/如何判断用户设备.md"}'),e={name:"interview/JavaScript/如何判断用户设备.md"},n=t(`<h2 id="如何判断用户设备" tabindex="-1">如何判断用户设备 <a class="header-anchor" href="#如何判断用户设备" aria-label="Permalink to &quot;如何判断用户设备&quot;">​</a></h2><h3 id="useragent" tabindex="-1">userAgent <a class="header-anchor" href="#useragent" aria-label="Permalink to &quot;userAgent&quot;">​</a></h3><p>通过浏览器<code>navigator.userAgent</code>判断用户设备</p><blockquote><p><code>UAParser.js</code>：一个用于检测当前设备的工具库，也可以用在node.js中</p></blockquote><h3 id="matchmedia" tabindex="-1">matchMedia <a class="header-anchor" href="#matchmedia" aria-label="Permalink to &quot;matchMedia&quot;">​</a></h3><p>利用<code>window.matchMedia</code>方法判断屏幕宽度，如果小于<code>760px</code>视为移动设备</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isMobile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;only screen and (max-width: 760px)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches;</span></span></code></pre></div><p>判断当前设备游标，是否为不精确的</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isMobile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(pointer:coarse)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches;</span></span></code></pre></div><p>如果设备支持鼠标和触摸的方式，则需要使用<code>any-pointer</code>判断</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isMobile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(any-pointer:coarse)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches;</span></span></code></pre></div><ul><li><code>MDN</code><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer" target="_blank" rel="noreferrer">media/pointer</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer" target="_blank" rel="noreferrer">any-pointer</a></li></ul></li></ul><h3 id="touch" tabindex="-1">touch <a class="header-anchor" href="#touch" aria-label="Permalink to &quot;touch&quot;">​</a></h3><p><code>touch</code>是移动设备特有的事件，可以通过该事件判断是否为移动设备</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isMobile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TouchEvent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15),h=[n];function l(p,k,r,d,o,c){return i(),a("div",null,h)}const u=s(e,[["render",l]]);export{g as __pageData,u as default};
