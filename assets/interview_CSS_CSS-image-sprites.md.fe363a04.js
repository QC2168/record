import{_ as s,o as a,c as e,a as n}from"./app.5defb350.js";const h=JSON.parse('{"title":"CSS-image-sprites","description":"","frontmatter":{"title":"CSS-image-sprites","tags":["CSS"]},"headers":[{"level":2,"title":"CSS-image-sprites","slug":"css-image-sprites","link":"#css-image-sprites","children":[{"level":3,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]}],"relativePath":"interview/CSS/CSS-image-sprites.md"}'),l={name:"interview/CSS/CSS-image-sprites.md"},p=n(`<h2 id="css-image-sprites" tabindex="-1">CSS-image-sprites <a class="header-anchor" href="#css-image-sprites" aria-hidden="true">#</a></h2><p>又称精灵图，主要运用在带有大量小图标的网页上面，可大幅减少页面向服务器请求图像数据。</p><p>其实就是将全部图像元素都放到一张“大图片”中，到时候浏览器只需要请求这一张图片就可以拿到全部的图像数据，对内存和带宽更加友好。</p><blockquote><p>在http2中，直接请求多个数据图像可能会更好</p></blockquote><h3 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-hidden="true">#</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">mobile-icon</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">url</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/assets/icons.png</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-730px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-repeat</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> no-repeat</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-hidden="true">#</a></h3><ul><li>减少页面对图像的请求</li><li>减少图片字节（合成的图片总比多张图片大小的总和小）</li></ul><h3 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-hidden="true">#</a></h3><ul><li>开发时比较麻烦，需要借助工具定位图像的位置</li><li>维护这种图片时，无需改动的位置最好不要改动避免<code>CSS</code>变动</li></ul>`,10),o=[p];function t(r,c,i,C,D,d){return a(),e("div",null,o)}const F=s(l,[["render",t]]);export{h as __pageData,F as default};
