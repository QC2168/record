import{_ as e,o as a,c as t,R as c}from"./chunks/framework.qjNjGLUL.js";const h=JSON.parse('{"title":"typescript中的module和namespace有什么区别","description":"","frontmatter":{"title":"typescript中的module和namespace有什么区别","tags":["interview"]},"headers":[],"relativePath":"interview/Typescript/typescript中的module和namespace有什么区别.md","filePath":"interview/Typescript/typescript中的module和namespace有什么区别.md"}'),o={name:"interview/Typescript/typescript中的module和namespace有什么区别.md"},r=c('<h3 id="module" tabindex="-1">module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;module&quot;">​</a></h3><p><code>module</code>指将代码封装成模块化的结构，使得代码更加易于维护和重用</p><h3 id="namespace" tabindex="-1">namespace <a class="header-anchor" href="#namespace" aria-label="Permalink to &quot;namespace&quot;">​</a></h3><p><code>namespace</code>是一种逻辑上的组织方式，用于将代码分组，防止命名冲突</p><h3 id="declare" tabindex="-1">declare <a class="header-anchor" href="#declare" aria-label="Permalink to &quot;declare&quot;">​</a></h3><p><code>declare</code>关键字用于声明已经存在的变量、函数、类或命名空间等，这些声明一般来自于第三方库或模块。使用<code>declare</code>关键字可以告诉<code>TypeScript</code>编译器，这些变量、函数、类或命名空间已经存在，并且告知其类型信息，从而避免编译器报错</p>',6),d=[r];function p(s,i,n,l,_,m){return a(),t("div",null,d)}const f=e(o,[["render",p]]);export{h as __pageData,f as default};
