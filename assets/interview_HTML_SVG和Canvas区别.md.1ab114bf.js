import{_ as a,c as e,o as n,a as s}from"./app.06f43e56.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"SVG和Canvas区别","slug":"svg和canvas区别","link":"#svg和canvas区别","children":[{"level":3,"title":"SVG","slug":"svg","link":"#svg","children":[]},{"level":3,"title":"Canvas","slug":"canvas","link":"#canvas","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"应用","slug":"应用","link":"#应用","children":[]}]}],"relativePath":"interview/HTML/SVG和Canvas区别.md"}'),i={name:"interview/HTML/SVG和Canvas区别.md"},l=s('<h2 id="svg和canvas区别" tabindex="-1">SVG和Canvas区别 <a class="header-anchor" href="#svg和canvas区别" aria-hidden="true">#</a></h2><h3 id="svg" tabindex="-1">SVG <a class="header-anchor" href="#svg" aria-hidden="true">#</a></h3><p>SVG是可缩放矢量图形，是基于可扩展标记语言XML描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。</p><h3 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-hidden="true">#</a></h3><p>Canvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制。</p><h3 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-hidden="true">#</a></h3><ul><li>SVG不依赖分辨率，放大后不会失真，而Canvas依赖分辨率，放大会导致图形失真</li><li>SVG支持事件处理器，Canvas不支持事件处理器</li><li>Canvas渲染文字能力较弱，因为Canvas是按像素来渲染的，</li><li>Canvas可以保存为png、jpg图像</li></ul><h3 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-hidden="true">#</a></h3><ul><li><p>Canvas是画布，绘画出来的图形是位图，渲染性能较高。一般游戏开发和一些比较复杂的图表都是使用Canvas开发的。</p></li><li><p>而SVG，比较适合做大图，地图，因为放大之后不会失真。</p></li></ul>',9),t=[l];function r(c,d,v,h,_,o){return n(),e("div",null,t)}const u=a(i,[["render",r]]);export{S as __pageData,u as default};
