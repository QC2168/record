import{_ as e,o as l,c as a,a as t}from"./app.5defb350.js";const O=JSON.parse('{"title":"DOM和BOM","description":"","frontmatter":{"title":"DOM和BOM","tags":["Browser"]},"headers":[{"level":2,"title":"DOM","slug":"dom","link":"#dom","children":[]},{"level":2,"title":"BOM","slug":"bom","link":"#bom","children":[]},{"level":2,"title":"差异对比","slug":"差异对比","link":"#差异对比","children":[{"level":3,"title":"DOM","slug":"dom-1","link":"#dom-1","children":[]},{"level":3,"title":"BOM","slug":"bom-1","link":"#bom-1","children":[]}]}],"relativePath":"interview/Browser/DOM和BOM.md"}'),i={name:"interview/Browser/DOM和BOM.md"},n=t(`<p>是不是有点回到刚开始学JavaScript的时候了，什么是DOM和什么是BOM？</p><h2 id="dom" tabindex="-1">DOM <a class="header-anchor" href="#dom" aria-hidden="true">#</a></h2><p>全称Document Object Model，是 HTML 和 XML 文档的编程接口。通过特定的接口可以访问对应的对象属性和方法，也可以获取节点信息。</p><p>也就是把一个文档（元素）作为一个对象来看待</p><p>像我们操作的页面元素这些都是DOM元素，例如创建一个DIV_DOM元素（<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement" target="_blank" rel="noreferrer">HTMLDivElement</a>）,可以对这个元素进行属性添加和修改（setAttribute），这些都是在操作DOM对象</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// output &lt;div&gt;​&lt;/div&gt;​</span></span>
<span class="line"></span></code></pre></div><h2 id="bom" tabindex="-1">BOM <a class="header-anchor" href="#bom" aria-hidden="true">#</a></h2><p>全称Browser Object Model，也是一个对象的构造，主要和浏览器打交道，获取一些</p><p>你会发现从MDN上并找不到BOM，而是搜索到Window。因为没有这个标准，像IE浏览器就扩展了BOM对象，加入了activeXObject这个类</p><blockquote><p>JavaScript语法标准化组织是ECMA，DOM的是W3C，而BOM是各个浏览器厂商自己规定实现的</p></blockquote><p>BOM对象可以访问浏览器中的组件，例如我们采用的历史记录前进后退，获取屏幕宽高度等内容。</p><p>主要可以分为六大类</p><ol><li>document</li><li>event</li><li>history</li><li>location</li><li>screen</li><li>navigator</li></ol><h2 id="差异对比" tabindex="-1">差异对比 <a class="header-anchor" href="#差异对比" aria-hidden="true">#</a></h2><h3 id="dom-1" tabindex="-1">DOM <a class="header-anchor" href="#dom-1" aria-hidden="true">#</a></h3><ul><li>文档对象模型</li><li>顶级对象是document</li><li>可以用来操作html页面的元素</li><li>标准化是w3c来制定</li></ul><h3 id="bom-1" tabindex="-1">BOM <a class="header-anchor" href="#bom-1" aria-hidden="true">#</a></h3><ul><li>浏览器对象模型</li><li>顶级对象是window</li><li>用来和浏览器之间进行交互</li><li>是由各浏览器厂商在各自浏览器上定义，没有一个统一的标准</li><li>其实DOM对象就相当于是BOM儿子，因为DOM对象的操作都是由浏览器来执行的</li></ul>`,18),s=[n];function o(r,c,d,p,h,M){return l(),a("div",null,s)}const D=e(i,[["render",o]]);export{O as __pageData,D as default};
