import{_ as a,o as e,c as s,a as n}from"./app.89dd2c8f.js";const g=JSON.parse('{"title":"0.1+0.2等于0.3吗","description":"","frontmatter":{"title":"0.1+0.2等于0.3吗","tags":["JavaScript"]},"headers":[{"level":2,"title":"0.1+0.2等于0.3吗","slug":"_0-1-0-2等于0-3吗","link":"#_0-1-0-2等于0-3吗","children":[{"level":3,"title":"为什么？","slug":"为什么","link":"#为什么","children":[]},{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"相关的库","slug":"相关的库","link":"#相关的库","children":[]}],"relativePath":"interview/JavaScript/0.1+0.2等于0.3吗.md"}'),l={name:"interview/JavaScript/0.1+0.2等于0.3吗.md"},t=n(`<h2 id="_0-1-0-2等于0-3吗" tabindex="-1">0.1+0.2等于0.3吗 <a class="header-anchor" href="#_0-1-0-2等于0-3吗" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">0.1+0.2</span></span>
<span class="line"><span style="color:#A6ACCD;">// 0.30000000000000004</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="为什么" tabindex="-1">为什么？ <a class="header-anchor" href="#为什么" aria-hidden="true">#</a></h3><p>在<code>JavaScript</code>中，只有一种数字类型（<code>number</code>），它是遵循<code>IEE754</code>标准来实现的，通过<code>64bit</code>固定长度来表示一个数字（标准的双精度浮点数）</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>这是一个计算机科学里面经典问题，采用了IEE754这个标准的编程语言都会有这个问题的存在</p></div><p>在计算<code>0.1+0.2</code>时，计算机无法直接计算十进制数字，而且先根据<code>IEE754</code>规范转变成对应的二进制，再进行对接运算</p><p>但这<code>0.1</code>和<code>0.2</code>这两个数的二进制都是死循环</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">0.1 -&gt; 0.0001100110011001...(无限循环)</span></span>
<span class="line"><span style="color:#A6ACCD;">0.2 -&gt; 0.0011001100110011...(无限循环)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>由于<code>IEE754</code>尾数的限制，需要将多余的位去掉再进行运算</p><p><strong>得出来的结果是</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">0.0100110011001100110011001100110011001100110011001100</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>再将其转成十进制就有了开头的</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">0.30000000000000004</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>因为精度损失，导致了计算出现了偏差问题</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-hidden="true">#</a></h3><ul><li>将数字先乘后除，避免小数导致运算出现偏差</li></ul><h2 id="相关的库" tabindex="-1">相关的库 <a class="header-anchor" href="#相关的库" aria-hidden="true">#</a></h2><ul><li><a href="https://mathjs.org/" target="_blank" rel="noreferrer">Math.js</a></li><li><a href="http://mikemcl.github.io/big.js/" target="_blank" rel="noreferrer">big.js</a></li></ul>`,18),c=[t];function i(o,p,r,d,h,_){return e(),s("div",null,c)}const C=a(l,[["render",i]]);export{g as __pageData,C as default};
