import{_ as s,o as a,c as n,a as l}from"./app.089648b3.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"ES10语法","slug":"es10语法","link":"#es10语法","children":[]},{"level":2,"title":"数组降维","slug":"数组降维","link":"#数组降维","children":[]},{"level":2,"title":"遍历降维","slug":"遍历降维","link":"#遍历降维","children":[]},{"level":2,"title":"和Array.map()的对比","slug":"和array-map-的对比","link":"#和array-map-的对比","children":[]},{"level":2,"title":"Object fromEntries","slug":"object-fromentries","link":"#object-fromentries","children":[]},{"level":2,"title":"String trim","slug":"string-trim","link":"#string-trim","children":[]},{"level":2,"title":"Symbol description","slug":"symbol-description","link":"#symbol-description","children":[]},{"level":2,"title":"可选的Catch的参数","slug":"可选的catch的参数","link":"#可选的catch的参数","children":[]},{"level":2,"title":"更友好的String.toString","slug":"更友好的string-tostring","link":"#更友好的string-tostring","children":[]}],"relativePath":"article/ES10.md"}'),o={name:"article/ES10.md"},p=l(`<h2 id="es10语法" tabindex="-1">ES10语法 <a class="header-anchor" href="#es10语法" aria-hidden="true">#</a></h2><p><code>ES10</code>又称<code>ES2019</code>，在<code>ES6</code>之后的语法我们都统称为<code>ES6+</code>，下面我们来看看<code>ES10</code>中新增的新语法。它们分别有：数组降维、键值列表转对象、字符串去除前/后空格等实际开发中实用功能。</p><h2 id="数组降维" tabindex="-1">数组降维 <a class="header-anchor" href="#数组降维" aria-hidden="true">#</a></h2><p><code>Array.flat</code>方法会将一个数组进行降维操作，并合成一个新的数组返回。（如果没有参数传入，默认降维深度为<code>1</code>）</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nums </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">]]]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newNums1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newNums1)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ 1, 2, 3, 4, 5, 6, [ 7, 8 ] ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newNums2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nums</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flat</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newNums2)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [1, 2, 3, 4, 5, 6, 7, 8]</span></span>
<span class="line"></span></code></pre></div><h2 id="遍历降维" tabindex="-1">遍历降维 <a class="header-anchor" href="#遍历降维" aria-hidden="true">#</a></h2><p><code>Array.flatMap</code>方法会将传入的函数映射到数组中的每一个元素。并返回每个元素的结果集合，再进行<code>flat</code>操作（降维深度为<code>1</code>）。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nums2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newNums3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nums2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flatMap</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newNums3)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// [ 2, 4, 6, 8, 12 ]</span></span>
<span class="line"></span></code></pre></div><h2 id="和array-map-的对比" tabindex="-1">和Array.map()的对比 <a class="header-anchor" href="#和array-map-的对比" aria-hidden="true">#</a></h2><p>在一般情况下使用<code>map</code>和<code>flatMap</code>方法好像都可以。我们看下面这个案例，可以更好了解到<code>flatMap</code>的作用。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I live in Guangzhou</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">my name is _island</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newMsg1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flatMap</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newMsg2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> msg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newMsg1)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   &#39;hello&#39;, &#39;world&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   &#39;I&#39;,     &#39;live&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   &#39;in&#39;,    &#39;Guangzhou&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   &#39;my&#39;,    &#39;name&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   &#39;is&#39;,    &#39;_island&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ]</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(newMsg2)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   [ &#39;hello&#39;, &#39;world&#39; ],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   [ &#39;I&#39;, &#39;live&#39;, &#39;in&#39;, &#39;Guangzhou&#39; ],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   [ &#39;my&#39;, &#39;name&#39;, &#39;is&#39;, &#39;_island&#39; ]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ]</span></span>
<span class="line"></span></code></pre></div><h2 id="object-fromentries" tabindex="-1">Object fromEntries <a class="header-anchor" href="#object-fromentries" aria-hidden="true">#</a></h2><p><code>Object.fromEntries</code>方法用于将一个<code>key-value</code>的二维数组转换为一个对象。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_island</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromEntries</span><span style="color:#A6ACCD;">(arr)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(obj)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// { name: &#39;_island&#39;, age: 18 }</span></span>
<span class="line"></span></code></pre></div><h2 id="string-trim" tabindex="-1">String trim <a class="header-anchor" href="#string-trim" aria-hidden="true">#</a></h2><p>在<code>ES10</code>中对字符串对象新增了<code>trimStart</code>、<code>trimEnd</code>方法，用于处理字符串前、后的空格内容。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> str6 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  _island  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str6</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trimStart</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &#39;_island  &#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(str6</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trimEnd</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// &#39;  _island&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="symbol-description" tabindex="-1">Symbol description <a class="header-anchor" href="#symbol-description" aria-hidden="true">#</a></h2><p>在<code>ES10</code>中，<code>Symbol</code>类型可以声明时传入一个<code>Symbol</code>描述符。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> s1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Symbol</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Symbol描述符</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="可选的catch的参数" tabindex="-1">可选的Catch的参数 <a class="header-anchor" href="#可选的catch的参数" aria-hidden="true">#</a></h2><p>在过去<code>try</code>语句中<code>catch</code>子句必须接受一个错误参数，而在<code>ES10</code>中，我们可以不创建这个错误参数也可以正常允许。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 之前的写法</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">{}</span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#A6ACCD;">(e)</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ES10之后的写法</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#89DDFF;">{}</span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><h2 id="更友好的string-tostring" tabindex="-1">更友好的String.toString <a class="header-anchor" href="#更友好的string-tostring" aria-hidden="true">#</a></h2><p><code>ES10</code>之后，<code>toString</code>方法会返回精确的字符，这包括空格和注释。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* _island */</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* age 18 */</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 之前</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(foo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// function foo(){}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ES10之后</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(foo</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// function /* comment */ foo /* another comment */() {}</span></span>
<span class="line"></span></code></pre></div>`,26),e=[p];function t(c,r,y,i,D,F){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
