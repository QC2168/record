import{_ as s,c as a,o as n,a as l}from"./app.3b55d36a.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":2,"title":"解答栗子","slug":"解答栗子","link":"#解答栗子","children":[]},{"level":2,"title":"栗子一","slug":"栗子一","link":"#栗子一","children":[]},{"level":2,"title":"栗子二","slug":"栗子二","link":"#栗子二","children":[]},{"level":2,"title":"栗子三","slug":"栗子三","link":"#栗子三","children":[]},{"level":2,"title":"问题分析","slug":"问题分析","link":"#问题分析","children":[]},{"level":2,"title":"编码实现","slug":"编码实现","link":"#编码实现","children":[]},{"level":2,"title":"跑一下代码","slug":"跑一下代码","link":"#跑一下代码","children":[]}],"relativePath":"algorithm/路径总和.md"}'),e={name:"algorithm/路径总和.md"},o=l(`<p>一起养成写作习惯！这是我参与「掘金日新计划 · 4 月更文挑战」的第7天，<a href="https://juejin.cn/post/7080800226365145118" target="_blank" rel="noreferrer">点击查看活动详情</a>。</p><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-hidden="true">#</a></h2><p>给你二叉树的根节点 <code>root</code> 和一个表示目标和的整数 <code>targetSum</code> 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 <code>targetSum</code> 。如果存在，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p><blockquote><p>叶子节点 是指没有子节点的节点。</p></blockquote><h2 id="解答栗子" tabindex="-1">解答栗子 <a class="header-anchor" href="#解答栗子" aria-hidden="true">#</a></h2><h2 id="栗子一" tabindex="-1">栗子一 <a class="header-anchor" href="#栗子一" aria-hidden="true">#</a></h2><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/202204091813681.jpeg" alt="img"></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">输入：root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：true</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：等于目标和的根节点到叶节点路径如上图所示。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="栗子二" tabindex="-1">栗子二 <a class="header-anchor" href="#栗子二" aria-hidden="true">#</a></h2><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/202204091814821.jpeg" alt="img"></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">输入：root = [1,2,3], targetSum = 5</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：false</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：树中存在两条根节点到叶子节点的路径：</span></span>
<span class="line"><span style="color:#A6ACCD;">(1 --&gt; 2): 和为 3</span></span>
<span class="line"><span style="color:#A6ACCD;">(1 --&gt; 3): 和为 4</span></span>
<span class="line"><span style="color:#A6ACCD;">不存在 sum = 5 的根节点到叶子节点的路径。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="栗子三" tabindex="-1">栗子三 <a class="header-anchor" href="#栗子三" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">输入：root = [], targetSum = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：false</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：由于树是空的，所以不存在根节点到叶子节点的路径。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="问题分析" tabindex="-1">问题分析 <a class="header-anchor" href="#问题分析" aria-hidden="true">#</a></h2><p>这一道我们可以使用递归的方式来进行解答，我们要从头节点的找它的左右节点，递归节点的左右两个子节点，每到一个子节点时将当前剩下的目标数值减去当前节点的值，直到叶节点的时候，如果目标节点和当前节点值一致时返回<code>true</code>，否则返回<code>false</code>。</p><h2 id="编码实现" tabindex="-1">编码实现 <a class="header-anchor" href="#编码实现" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> hasPathSum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">targetSum</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">targetSum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">hasPathSum</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">targetSum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">hasPathSum</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">targetSum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="跑一下代码" tabindex="-1">跑一下代码 <a class="header-anchor" href="#跑一下代码" aria-hidden="true">#</a></h2><p><img src="https://raw.githubusercontent.com/QC2168/note-img/main/202204091906809.png" alt="image-20220409190638748"></p>`,19),p=[o];function t(c,r,i,y,F,D){return n(),a("div",null,p)}const h=s(e,[["render",t]]);export{C as __pageData,h as default};
