import{_ as s,o as a,c as n,a as l}from"./app.2d0f0e7d.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"指令篇","slug":"指令篇","link":"#指令篇","children":[{"level":3,"title":"v-if和v-show","slug":"v-if和v-show","link":"#v-if和v-show","children":[]},{"level":3,"title":"v-model语法糖","slug":"v-model语法糖","link":"#v-model语法糖","children":[]},{"level":3,"title":"Vue内置的指令有哪些","slug":"vue内置的指令有哪些","link":"#vue内置的指令有哪些","children":[]}]}],"relativePath":"interview/Vue/指令篇.md"}'),o={name:"interview/Vue/指令篇.md"},e=l(`<h2 id="指令篇" tabindex="-1">指令篇 <a class="header-anchor" href="#指令篇" aria-hidden="true">#</a></h2><h3 id="v-if和v-show" tabindex="-1">v-if和v-show <a class="header-anchor" href="#v-if和v-show" aria-hidden="true">#</a></h3><ul><li><code>v-if</code>如果值为<code>false</code>时，在生成<code>node</code>树时不会生成对应的节点，不会出现在<code>DOM</code>中</li><li><code>v-show</code>会生成节点并插入到<code>dom</code>中，只是在渲染的时候，通过<code>display:none</code>的方式隐藏了元素</li></ul><h4 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-hidden="true">#</a></h4><p>如果元素需要频繁的切换显示/隐藏时，使用<code>v-show</code>更加的合适</p><p><code>v-if</code>切换时性能消耗较高，<code>v-show</code>渲染效率更高</p><h3 id="v-model语法糖" tabindex="-1">v-model语法糖 <a class="header-anchor" href="#v-model语法糖" aria-hidden="true">#</a></h3><p><code>v-model</code>是<code>Vue</code>中经常用到的一个指令了，其实它是一个语法糖，实现起来也很简单</p><p>先定义一个<code>val</code>的<code>ref</code>变量用于存放<code>input</code>框中的值，<code>input</code>元素绑定<code>input</code>事件，从事件参数从拿到<code>input</code>框中的值将其赋值到<code>val</code>中即可。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@input</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handleChange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ref</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">setup</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">handleChange</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">target</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">handleChange</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p><a href="https://stackblitz.com/edit/vue-tr84js?file=src/App.vue" target="_blank" rel="noreferrer">stackblitz</a></p></blockquote><h3 id="vue内置的指令有哪些" tabindex="-1">Vue内置的指令有哪些 <a class="header-anchor" href="#vue内置的指令有哪些" aria-hidden="true">#</a></h3><table><thead><tr><th>指令</th><th>描述</th></tr></thead><tbody><tr><td>v-show</td><td>控制元素是否显示，原理是利用<code>display:none</code></td></tr><tr><td>v-if</td><td>控制元素是否渲染，原理是利用<code>display:none</code></td></tr><tr><td>v-html</td><td>将指定指令值作为html文本渲染到组件上，会先清空目标中的所有内容</td></tr><tr><td>v-for</td><td>通常用于遍历模板</td></tr><tr><td>v-else</td><td>配合v-if使用</td></tr><tr><td>v-else-if</td><td>配合v-if使用</td></tr><tr><td>v-on</td><td>用于绑定事件监听器，语法糖为<code>@</code></td></tr><tr><td>v-bind</td><td>用于传递属性到组件中，语法糖为<code>:</code></td></tr><tr><td>v-model</td><td>双向数据绑定</td></tr><tr><td>v-slot</td><td>用于将组件传递到具名插槽中</td></tr><tr><td>v-pre</td><td>绑定的元素不进行编译，不做如何处理</td></tr><tr><td>v-once</td><td>绑定的元素只渲染一次，后续不在更新（性能优化）</td></tr><tr><td><a href="https://cn.vuejs.org/api/built-in-directives.html#v-memo" target="_blank" rel="noreferrer">v-memo</a></td><td>缓存模板子树，应该很少用到</td></tr><tr><td>v-cloak</td><td>用于未编译完成时隐藏元素</td></tr></tbody></table>`,13),t=[e];function p(c,r,d,F,D,y){return a(),n("div",null,t)}const h=s(o,[["render",p]]);export{v as __pageData,h as default};
