import{_ as t,o as e,c as l,a as i}from"./app.89d1c8ff.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"如何理解 HTML 语义化","slug":"如何理解-html-语义化","link":"#如何理解-html-语义化","children":[]},{"level":2,"title":"HTML5新增了哪些内容","slug":"html5新增了哪些内容","link":"#html5新增了哪些内容","children":[{"level":3,"title":"新增特性","slug":"新增特性","link":"#新增特性","children":[]},{"level":3,"title":"HTML5优点","slug":"html5优点","link":"#html5优点","children":[]},{"level":3,"title":"HTML5缺点","slug":"html5缺点","link":"#html5缺点","children":[]}]},{"level":2,"title":"块级元素有哪些","slug":"块级元素有哪些","link":"#块级元素有哪些","children":[]},{"level":2,"title":"行内元素有哪些","slug":"行内元素有哪些","link":"#行内元素有哪些","children":[]},{"level":2,"title":"内联块状元素有哪些","slug":"内联块状元素有哪些","link":"#内联块状元素有哪些","children":[]}],"relativePath":"interview/HTML/index.md"}'),d={name:"interview/HTML/index.md"},a=i('<h2 id="如何理解-html-语义化" tabindex="-1">如何理解 HTML 语义化 <a class="header-anchor" href="#如何理解-html-语义化" aria-hidden="true">#</a></h2><p>语义化指的是用正确的标签干正确的事情，让页面的内容结构化。</p><p>例如简单实现一个列表，我可以用div和css一把梭，但语义化方式可以使用ul标签。</p><p>语义化的好处：</p><ul><li>有助于开发人员更好的阅读维护理解代码</li><li>有利于搜索引擎优化，爬虫依赖于标签来确定上下文和各个关键字的权重 SEO</li><li>方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页</li></ul><h2 id="html5新增了哪些内容" tabindex="-1">HTML5新增了哪些内容 <a class="header-anchor" href="#html5新增了哪些内容" aria-hidden="true">#</a></h2><h3 id="新增特性" tabindex="-1">新增特性 <a class="header-anchor" href="#新增特性" aria-hidden="true">#</a></h3><table><thead><tr><th>特性</th><th>描述</th></tr></thead><tbody><tr><td>Canvas、SVG</td><td>绘画元素</td></tr><tr><td>video、audio</td><td>视频，音频元素</td></tr><tr><td>Drag、Drop</td><td>拖放Api</td></tr><tr><td>GeoLocation</td><td>获取位置</td></tr><tr><td>localStorage、sessionStorage</td><td>本地存储</td></tr><tr><td>IndexDB</td><td>前端数据库</td></tr><tr><td>Worker</td><td>允许后台线程中运行脚本</td></tr><tr><td>webSocket</td><td>单个TCP连接上进行全双工通信的协议</td></tr><tr><td>语义化标签</td><td>-</td></tr></tbody></table><blockquote><ul><li>新增语义化标签 -- 如：article、footer、header、nav、section。</li><li>新增表单控件 -- 如：date、time、email、url、search。</li></ul></blockquote><h3 id="html5优点" tabindex="-1">HTML5优点 <a class="header-anchor" href="#html5优点" aria-hidden="true">#</a></h3><ul><li>提高可用性和可维护性，改进了用户体验。</li><li>新增语义化标签，有助于开发人员定义清晰的结构。</li><li>可以播放视频音频，增加多媒体元素。</li><li>友好地替代了flash和silverlight。</li><li>爬虫抓取网站的时候，对于SEO很友好。</li><li>H5被大量应用于移动应用和游戏开发。</li><li>支持多设备跨平台，可移植性好</li></ul><h3 id="html5缺点" tabindex="-1">HTML5缺点 <a class="header-anchor" href="#html5缺点" aria-hidden="true">#</a></h3><ul><li>完善性：许多特性各浏览器的支持程度也不一样</li><li>兼容性：各浏览器之间将缺少一种统一的数据描述格式，造成用户体验不佳，旧版本的浏览器可能会有问题。</li></ul><h2 id="块级元素有哪些" tabindex="-1">块级元素有哪些 <a class="header-anchor" href="#块级元素有哪些" aria-hidden="true">#</a></h2><p>常用的块级元素：div、p、h、table、form、ul、ol、dl</p><h2 id="行内元素有哪些" tabindex="-1">行内元素有哪些 <a class="header-anchor" href="#行内元素有哪些" aria-hidden="true">#</a></h2><p>常用的行内元素：a、span、br、label、strong</p><h2 id="内联块状元素有哪些" tabindex="-1">内联块状元素有哪些 <a class="header-anchor" href="#内联块状元素有哪些" aria-hidden="true">#</a></h2><p>常用的内联块状元素有：img、input</p>',19),r=[a];function h(n,s,o,c,u,m){return e(),l("div",null,r)}const b=t(d,[["render",h]]);export{_ as __pageData,b as default};
